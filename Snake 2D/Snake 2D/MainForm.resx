<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timerMove.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>125, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>